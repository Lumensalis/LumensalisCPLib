# from .Manager import MainManager

from token import OP
from LumensalisCP.Identity.Local import NamedLocalIdentifiable
from LumensalisCP.CPTyping import ForwardRef
from LumensalisCP.Main.Manager import MainManager
from LumensalisCP.common import *

class MainChild( NamedLocalIdentifiable):
    
    def __init__( self, main:MainManager, name:Optional[str]=None): ...

    
    @property
    def main(self) -> MainManager: ...
    
    def mcPostCreate(self): pass
    

class FactoryBase( MainChild ):
    def __init__(self, main:MainManager): ...
    
    def makeChild( self, cls, **kwds ): ...
    
    def callPostCreate(self, instance): ...
    
class ManagerBase(object):
    pass
    def _registerManager( self ): ...
    
class SubManagerBase(ManagerBase,MainChild):
    def __init__(self, main:MainManager, name:Optional[str]=None ):pass

class ManagerRef(object):
    
    def __init__( self, manager:ManagerBase ): pass
    def __call__( self ) -> ManagerBase: pass

class MainRef(object):
    
    def __init__( self, main:MainManager  ):pass
    def __call__( self ) -> MainManager: pass

